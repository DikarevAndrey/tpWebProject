# Generated by Django 2.0.3 on 2018-03-24 21:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Full text of the answer')),
                ('dateTime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date and time the answer was published')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(choices=[(-1, 'DISLIKE'), (1, 'LIKE')], verbose_name='Like or dislike')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(default='img/nobody.jpg', upload_to='uploads/%Y/%m/%d/', verbose_name='Avatar image of the user')),
                ('rating', models.IntegerField(default=0, verbose_name='Rating of the user')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Basic user info')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title of the question')),
                ('text', models.TextField(verbose_name='Full text of the question')),
                ('dateTime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date and time the question was published')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='qSite.Profile', verbose_name='Author of the question')),
                ('likes', models.ManyToManyField(blank=True, to='qSite.Like', verbose_name='Likes of the question')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, verbose_name='Name of the tag')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='tags',
            field=models.ManyToManyField(blank=True, to='qSite.Tag', verbose_name='Tags of the question'),
        ),
        migrations.AddField(
            model_name='like',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='qSite.Profile', verbose_name='Author of the vote'),
        ),
        migrations.AddField(
            model_name='answer',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='qSite.Profile', verbose_name='Author of the answer'),
        ),
        migrations.AddField(
            model_name='answer',
            name='likes',
            field=models.ManyToManyField(blank=True, to='qSite.Like', verbose_name='Likes of the question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qSite.Question', verbose_name='Question that is being answered'),
        ),
    ]
